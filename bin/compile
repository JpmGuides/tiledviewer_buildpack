#!/usr/bin/env bash

# Fail fast and fail hard.
set -e

# Prepend proper path for virtualenv hackery. This will be deprecated soon.
export PATH=:/usr/local/bin:$PATH

# Paths.
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2
CACHED_DIRS=".heroku"

build=$BUILD_DIR
cache=$CACHE_DIR

# Syntax sugar.
function steps (){
  echo "-----> $@"
}

function indent() {
  sed -u 's/^/       /'
}

############################
#        package var       #
############################

opencv_version="2.4.8"
opencv_build_url=""
opencv_dir="opencv-${opencv_version}"
opencv_tar_file="opencv-${opencv_version}.tar.gz"

tiledviewer_version="1.0.0"
tiledviewer_build_url=""
tiledviewer_dir="tiledviewer-${tiledviewer_version}"
tiledviewer_tar_file="tiledviwer-${tiledviewer_version}.tar.gz"

############################
#   opencv installation    #
############################

steps 'installing opencv v{openccv_version}...' | indent

build_target=${build}/vendor
cache_target=${cache}/${opencv_tar_file}

if [ ! -f ${cache_target} ]; then
  echo 'No cached compile detected. Installing...'

  mkdir -p ${target}
  cd ${target}

  curl --silent --max-time 120 --location ${opencv_build_url} > ${opencv_tar_file}
  tar zxf ${opencv_tar_file}

  #linking opencv in the bin of app
  mkdir -p $BUILD_DIR/bin
  ln -s ../vendor/${opencv_dir}/bin/opencv_createsamples $BUILD_DIR/bin/opencv_createsamples
  ln -s ../vendor/${opencv_dir}/bin/opencv_haartraining $BUILD_DIR/bin/opencv_haartraining
  ln -s ../vendor/${opencv_dir}/bin/opencv_performance $BUILD_DIR/bin/opencv_performance
  ln -s ../vendor/${opencv_dir}/bin/opencv_traincascade $BUILD_DIR/bin/opencv_traincascade

  # cache slug
  rm ${opencv_tar_file}
  tar czf ${cache_target} ${opencv_vendored_dir} .
fi

############################
# tiledviewer installation #
############################

steps 'installing tiledviewer v{tiledviewer_version}...' | indent

build_target=${build}/vendor
cache_target=${cache}/${tiledviewer_tar_file}

if [ ! -f ${cache_target} ]; then
  echo 'No cached compile detected. Installing...'

  mkdir -p ${target}
  cd ${target}

  curl --silent --max-time 120 --location "${tiledviewer_url}" > ${tiledviewer_tar_file}
  tar zxf ${tiledviwer_tar_file}

  #linking tile_generator in the bin of app
  ln -s ../vendor/${tiledviewer_dir}/tile_generator $BUILD_DIR/bin/tile_generator

  #cache slug
  rm ${tiledviewer_tar_file}
  tar czf ${cache_target} ${tiledviewer_vendored_dir} .
fi
